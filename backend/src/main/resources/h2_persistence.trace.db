2022-06-19 11:32:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "SHORT_ID" not found; SQL statement:
SELECT * FROM ( (SELECT h1.UUID, h1.amount, h1.date, h2.f as sender, h2.t as recipient FROM 	       (SELECT * FROM TRANSACTION  WHERE   SHORT_ID= ? ) as h1 LEFT JOIN 	             (SELECT s1.SHORT_UUID AS F , s1.UUID AS Fuuid , s2.SHORT_UUID AS T,  s2.UUID AS Tuuid, t1.amount 	                  FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.SHORT_UUID                        WHERE  s1.SHORT_UUID = ? or s2.SHORT_UUID= ? ) as h2 ON h1.UUID = h2.Fuuid OR h1.UUID = h2.Tuuid                             WHERE h2.amount IS NULL)	UNION ALL   (SELECT t1.UUID,  t1.amount ,  t1.date, s1.SHORT_UUID AS F  , s2.SHORT_UUID AS T 			FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.SHORT_UUID 	            ) 	) AS a order by date ASC [42122-212]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:244)
	at org.h2.expression.ExpressionColumn.optimizeOther(ExpressionColumn.java:226)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:213)
	at org.h2.expression.condition.Comparison.optimize(Comparison.java:139)
	at org.h2.expression.Expression.optimizeCondition(Expression.java:148)
	at org.h2.command.query.Select.prepareExpressions(Select.java:1177)
	at org.h2.table.DerivedTable.<init>(DerivedTable.java:41)
	at org.h2.command.query.Query.toTable(Query.java:1004)
	at org.h2.command.Parser.readDerivedTableWithCorrelation(Parser.java:1936)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1816)
	at org.h2.command.Parser.readTableReference(Parser.java:2359)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2810)
	at org.h2.command.Parser.parseSelect(Parser.java:2917)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2800)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2667)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2646)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2639)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2794)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2667)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2646)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2639)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2632)
	at org.h2.command.Parser.readDerivedTableWithCorrelation(Parser.java:1915)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1816)
	at org.h2.command.Parser.readTableReference(Parser.java:2359)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2810)
	at org.h2.command.Parser.parseSelect(Parser.java:2917)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2800)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2667)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2646)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2639)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2632)
	at org.h2.command.Parser.parseQuery(Parser.java:2593)
	at org.h2.command.Parser.parsePrepared(Parser.java:724)
	at org.h2.command.Parser.parse(Parser.java:691)
	at org.h2.command.Parser.parse(Parser.java:661)
	at org.h2.command.Parser.prepareCommand(Parser.java:568)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:92)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:288)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:337)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:149)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:151)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:2122)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2059)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2037)
	at org.hibernate.loader.Loader.doQuery(Loader.java:956)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:357)
	at org.hibernate.loader.Loader.doList(Loader.java:2868)
	at org.hibernate.loader.Loader.doList(Loader.java:2850)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2682)
	at org.hibernate.loader.Loader.list(Loader.java:2677)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2186)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1204)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:177)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1617)
	at org.hibernate.query.Query.getResultList(Query.java:165)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:128)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:90)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:156)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:144)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:159)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy115.findTransactionFormAccountId(Unknown Source)
	at zorchi.rest.ApiController.getAccountId(ApiController.java:125)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-06-19 11:36:59 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT * FROM (\000d\000a(SELECT h1.UUID, h1.amount, h1.date, h2.f as sender, h2.t as recipient FROM \000d\000a      \0009       (SELECT * FROM TRANSACTION  WHERE   SHORT_UUID= 'F5921FEC8DBFAB62B9E3' ) as h1 LEFT JOIN \000d\000a    \0009             (SELECT s1.SHORT_UUID AS F , s1.UUID AS Fuuid , s2.SHORT_UUID AS T,  s2.UUID AS Tuuid, t1.amount \000d\000a                      FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.SHORT_UUID\000d\000a                          WHERE  s1.SHORT_UUID ='F5921FEC8DBFAB62B9E3' or s2.SHORT_UUID= 'F5921FEC8DBFAB62B9E3') as h2 ON h1.UUID = h2.Fuuid OR h1.UUID = h2.Tuuid  \000d\000a                               WHERE h2.amount IS NULL)"" \000d\000a \0009UNION ALL ""\000d\000a        (SELECT t1.UUID,  t1.amount ,  t1.date, s1.SHORT_UUID AS F  , s2.SHORT_UUID AS T \000d\000a     \0009\0009\0009FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.SHORT_UUID \000d\000a   \0009            ) [*]""\000d\000a    \0009) AS a order by date ASC"; SQL statement:
SELECT * FROM (
(SELECT h1.UUID, h1.amount, h1.date, h2.f as sender, h2.t as recipient FROM 
      	       (SELECT * FROM TRANSACTION  WHERE   SHORT_UUID= 'F5921FEC8DBFAB62B9E3' ) as h1 LEFT JOIN 
    	             (SELECT s1.SHORT_UUID AS F , s1.UUID AS Fuuid , s2.SHORT_UUID AS T,  s2.UUID AS Tuuid, t1.amount 
                      FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.SHORT_UUID
                          WHERE  s1.SHORT_UUID ='F5921FEC8DBFAB62B9E3' or s2.SHORT_UUID= 'F5921FEC8DBFAB62B9E3') as h2 ON h1.UUID = h2.Fuuid OR h1.UUID = h2.Tuuid  
                               WHERE h2.amount IS NULL)" 
 	UNION ALL "
        (SELECT t1.UUID,  t1.amount ,  t1.date, s1.SHORT_UUID AS F  , s2.SHORT_UUID AS T 
     			FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.SHORT_UUID 
   	            ) "
    	) AS a order by date ASC [42000-212]
2022-06-19 11:37:11 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT * FROM (\000d\000a(SELECT h1.UUID, h1.amount, h1.date, h2.f as sender, h2.t as recipient FROM \000d\000a      \0009       (SELECT * FROM TRANSACTION  WHERE   SHORT_UUID= 'F5921FEC8DBFAB62B9E3' ) as h1 LEFT JOIN \000d\000a    \0009             (SELECT s1.SHORT_UUID AS F , s1.UUID AS Fuuid , s2.SHORT_UUID AS T,  s2.UUID AS Tuuid, t1.amount \000d\000a                      FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.SHORT_UUID\000d\000a                          WHERE  s1.SHORT_UUID ='F5921FEC8DBFAB62B9E3' or s2.SHORT_UUID= 'F5921FEC8DBFAB62B9E3') as h2 ON h1.UUID = h2.Fuuid OR h1.UUID = h2.Tuuid  \000d\000a                               WHERE h2.amount IS NULL)\000d\000a \0009UNION ALL \000d\000a        (SELECT t1.UUID,  t1.amount ,  t1.date, s1.SHORT_UUID AS F  , s2.SHORT_UUID AS T \000d\000a     \0009\0009\0009FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.SHORT_UUID \000d\000a   \0009            ) [*]""\000d\000a    \0009) AS a order by date ASC"; SQL statement:
SELECT * FROM (
(SELECT h1.UUID, h1.amount, h1.date, h2.f as sender, h2.t as recipient FROM 
      	       (SELECT * FROM TRANSACTION  WHERE   SHORT_UUID= 'F5921FEC8DBFAB62B9E3' ) as h1 LEFT JOIN 
    	             (SELECT s1.SHORT_UUID AS F , s1.UUID AS Fuuid , s2.SHORT_UUID AS T,  s2.UUID AS Tuuid, t1.amount 
                      FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.SHORT_UUID
                          WHERE  s1.SHORT_UUID ='F5921FEC8DBFAB62B9E3' or s2.SHORT_UUID= 'F5921FEC8DBFAB62B9E3') as h2 ON h1.UUID = h2.Fuuid OR h1.UUID = h2.Tuuid  
                               WHERE h2.amount IS NULL)
 	UNION ALL 
        (SELECT t1.UUID,  t1.amount ,  t1.date, s1.SHORT_UUID AS F  , s2.SHORT_UUID AS T 
     			FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.SHORT_UUID 
   	            ) "
    	) AS a order by date ASC [42000-212]
2022-06-19 11:42:22 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "(SELECT h1.UUID, h1.amount, h1.date, h2.f, h2.f FROM\000d\000a\000d\000a(SELECT * FROM TRANSACTION  WHERE   SHORT_UUID = 'F5921FEC8DBFAB62B9E3') as h1 LEFT JOIN\000d\000a\000d\000a(SELECT s1.SHORT_UUID AS F , s1.UUID AS Fuuid , s2.SHORT_UUID AS T,  s2.UUID AS Tuuid, t1.amount, t1.date  FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.UUID[*]')\000d\000aas h2 ON h1.UUID = h2.Fuuid OR h1.UUID = h2.Tuuid  WHERE h2.amount IS NULL)\000d\000a\000d\000aUNION ALL\000d\000a\000d\000a(SELECT t1.UUID,  t1.amount ,  t1.date, s1.SHORT_UUID AS F  , s2.SHORT_UUID AS T  FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.UUID);"; SQL statement:
(SELECT h1.UUID, h1.amount, h1.date, h2.f, h2.f FROM

(SELECT * FROM TRANSACTION  WHERE   SHORT_UUID = 'F5921FEC8DBFAB62B9E3') as h1 LEFT JOIN

(SELECT s1.SHORT_UUID AS F , s1.UUID AS Fuuid , s2.SHORT_UUID AS T,  s2.UUID AS Tuuid, t1.amount, t1.date  FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.UUID')
as h2 ON h1.UUID = h2.Fuuid OR h1.UUID = h2.Tuuid  WHERE h2.amount IS NULL)

UNION ALL

(SELECT t1.UUID,  t1.amount ,  t1.date, s1.SHORT_UUID AS F  , s2.SHORT_UUID AS T  FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.UUID); [42000-212]
2022-06-19 11:43:45 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "(SELECT h1.UUID, h1.amount, h1.date, h2.f, h2.f FROM\000d\000a\000d\000a(SELECT * FROM TRANSACTION  WHERE   SHORT_UUID = 'F5921FEC8DBFAB62B9E3') as h1 LEFT JOIN\000d\000a\000d\000a(SELECT s1.SHORT_UUID AS F , s1.UUID AS Fuuid , s2.SHORT_UUID AS T,  s2.UUID AS Tuuid, t1.amount, t1.date  FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.UUID)\000d\000aas h2 ON h1.UUID = h2.Fuuid OR h1.UUID = h2.Tuuid  WHERE h2.amount IS NULL AND  [*]WHERE  s1.SHORT_UUID = 'F5921FEC8DBFAB62B9E3' or s2.SHORT_UUID = 'F5921FEC8DBFAB62B9E3')\000d\000a\000d\000aUNION ALL\000d\000a\000d\000a(SELECT t1.UUID,  t1.amount ,  t1.date, s1.SHORT_UUID AS F  , s2.SHORT_UUID AS T  FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.UUID)"; expected "INTERSECTS, NOT, EXISTS, UNIQUE, INTERSECTS"; SQL statement:
(SELECT h1.UUID, h1.amount, h1.date, h2.f, h2.f FROM

(SELECT * FROM TRANSACTION  WHERE   SHORT_UUID = 'F5921FEC8DBFAB62B9E3') as h1 LEFT JOIN

(SELECT s1.SHORT_UUID AS F , s1.UUID AS Fuuid , s2.SHORT_UUID AS T,  s2.UUID AS Tuuid, t1.amount, t1.date  FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.UUID)
as h2 ON h1.UUID = h2.Fuuid OR h1.UUID = h2.Tuuid  WHERE h2.amount IS NULL AND  WHERE  s1.SHORT_UUID = 'F5921FEC8DBFAB62B9E3' or s2.SHORT_UUID = 'F5921FEC8DBFAB62B9E3')

UNION ALL

(SELECT t1.UUID,  t1.amount ,  t1.date, s1.SHORT_UUID AS F  , s2.SHORT_UUID AS T  FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.UUID) [42001-212]
2022-06-19 11:43:52 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "S1.SHORT_UUID" not found; SQL statement:
(SELECT h1.UUID, h1.amount, h1.date, h2.f, h2.f FROM

(SELECT * FROM TRANSACTION  WHERE   SHORT_UUID = 'F5921FEC8DBFAB62B9E3') as h1 LEFT JOIN

(SELECT s1.SHORT_UUID AS F , s1.UUID AS Fuuid , s2.SHORT_UUID AS T,  s2.UUID AS Tuuid, t1.amount, t1.date  FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.UUID)
as h2 ON h1.UUID = h2.Fuuid OR h1.UUID = h2.Tuuid  WHERE h2.amount IS NULL AND   s1.SHORT_UUID = 'F5921FEC8DBFAB62B9E3' or s2.SHORT_UUID = 'F5921FEC8DBFAB62B9E3')

UNION ALL

(SELECT t1.UUID,  t1.amount ,  t1.date, s1.SHORT_UUID AS F  , s2.SHORT_UUID AS T  FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.UUID) [42122-212]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:244)
	at org.h2.expression.ExpressionColumn.optimizeOther(ExpressionColumn.java:226)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:213)
	at org.h2.expression.condition.Comparison.optimize(Comparison.java:139)
	at org.h2.expression.condition.ConditionAndOr.optimize(ConditionAndOr.java:137)
	at org.h2.expression.condition.ConditionAndOr.optimize(ConditionAndOr.java:136)
	at org.h2.expression.Expression.optimizeCondition(Expression.java:148)
	at org.h2.command.query.Select.prepareExpressions(Select.java:1177)
	at org.h2.command.query.SelectUnion.prepareExpressions(SelectUnion.java:250)
	at org.h2.command.query.Query.prepare(Query.java:218)
	at org.h2.command.Parser.prepareCommand(Parser.java:574)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1339)
	at org.h2.server.web.WebApp.query(WebApp.java:1137)
	at org.h2.server.web.WebApp.query(WebApp.java:1113)
	at org.h2.server.web.WebApp.process(WebApp.java:244)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:176)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:129)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:166)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-06-19 11:45:14 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "(SELECT h1.UUID, h1.amount, h1.date, h2.f, h2.f FROM\000d\000a\000d\000a(SELECT * FROM TRANSACTION  WHERE   SHORT_UUID = 'F5921FEC8DBFAB62B9E3') as h1 LEFT JOIN\000d\000a\000d\000a(SELECT s1.SHORT_UUID AS F , s1.UUID AS Fuuid , s2.SHORT_UUID AS T,  s2.UUID AS Tuuid, t1.amount, t1.date  FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.UUID  WHERE  s1.SHORT_UUID = 'F5921FEC8DBFAB62B9E3' or s2.SHORT_UUID = 'F5921FEC8DBFAB62B9E3')\000d\000aas h2 ON h1.UUID = h2.Fuuid OR h1.UUID = h2.Tuuid  WHERE h2.amount IS NULL AND [*])\000d\000a\000d\000aUNION ALL\000d\000a\000d\000a(SELECT t1.UUID,  t1.amount ,  t1.date, s1.SHORT_UUID AS F  , s2.SHORT_UUID AS T  FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.UUID)"; expected "INTERSECTS, NOT, EXISTS, UNIQUE, INTERSECTS"; SQL statement:
(SELECT h1.UUID, h1.amount, h1.date, h2.f, h2.f FROM

(SELECT * FROM TRANSACTION  WHERE   SHORT_UUID = 'F5921FEC8DBFAB62B9E3') as h1 LEFT JOIN

(SELECT s1.SHORT_UUID AS F , s1.UUID AS Fuuid , s2.SHORT_UUID AS T,  s2.UUID AS Tuuid, t1.amount, t1.date  FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.UUID  WHERE  s1.SHORT_UUID = 'F5921FEC8DBFAB62B9E3' or s2.SHORT_UUID = 'F5921FEC8DBFAB62B9E3')
as h2 ON h1.UUID = h2.Fuuid OR h1.UUID = h2.Tuuid  WHERE h2.amount IS NULL AND )

UNION ALL

(SELECT t1.UUID,  t1.amount ,  t1.date, s1.SHORT_UUID AS F  , s2.SHORT_UUID AS T  FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.UUID) [42001-212]
2022-06-19 11:47:14 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "(SELECT h1.UUID, h1.amount, h1.date, h2.f, h2.f FROM\000d\000a\000d\000a(SELECT * FROM TRANSACTION  WHERE   SHORT_UUID = 'F5921FEC8DBFAB62B9E3') as h1 LEFT JOIN\000d\000a\000d\000a(SELECT s1.SHORT_UUID AS F , s1.UUID AS Fuuid , s2.SHORT_UUID AS T,  s2.UUID AS Tuuid, t1.amount, t1.date  FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.UUID  WHERE  s1.SHORT_UUID = 'F5921FEC8DBFAB62B9E3' or s2.SHORT_UUID = 'F5921FEC8DBFAB62B9E3')\000d\000aas h2 ON h1.UUID = h2.Fuuid OR h1.UUID = h2.Tuuid  WHERE h2.amount IS NULL  )\000d\000a\000d\000aUNION ALL\000d\000a\000d\000a(SELECT t1.UUID,  t1.amount ,  t1.date, s1.SHORT_UUID AS F  , s2.SHORT_UUID AS T  FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.UUID WHERE[*])"; expected "INTERSECTS, NOT, EXISTS, UNIQUE, INTERSECTS"; SQL statement:
(SELECT h1.UUID, h1.amount, h1.date, h2.f, h2.f FROM

(SELECT * FROM TRANSACTION  WHERE   SHORT_UUID = 'F5921FEC8DBFAB62B9E3') as h1 LEFT JOIN

(SELECT s1.SHORT_UUID AS F , s1.UUID AS Fuuid , s2.SHORT_UUID AS T,  s2.UUID AS Tuuid, t1.amount, t1.date  FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.UUID  WHERE  s1.SHORT_UUID = 'F5921FEC8DBFAB62B9E3' or s2.SHORT_UUID = 'F5921FEC8DBFAB62B9E3')
as h2 ON h1.UUID = h2.Fuuid OR h1.UUID = h2.Tuuid  WHERE h2.amount IS NULL  )

UNION ALL

(SELECT t1.UUID,  t1.amount ,  t1.date, s1.SHORT_UUID AS F  , s2.SHORT_UUID AS T  FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.UUID WHERE) [42001-212]
2022-06-19 11:50:05 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Duplicate column name "F"; SQL statement:
SELECT * FROM (
(SELECT h1.UUID, h1.amount, h1.date, h2.f, h2.f FROM

(SELECT * FROM TRANSACTION  WHERE   SHORT_UUID = 'F5921FEC8DBFAB62B9E3') as h1 LEFT JOIN

(SELECT s1.SHORT_UUID AS F , s1.UUID AS Fuuid , s2.SHORT_UUID AS T,  s2.UUID AS Tuuid, t1.amount, t1.date  FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.UUID )
as h2 ON h1.UUID = h2.Fuuid OR h1.UUID = h2.Tuuid  WHERE h2.amount IS NULL  )
) AS a order by date ASC
UNION ALL

(SELECT t1.UUID,  t1.amount ,  t1.date, s1.SHORT_UUID AS F  , s2.SHORT_UUID AS T  FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.UUID
 WHERE  s1.SHORT_UUID = 'F5921FEC8DBFAB62B9E3' or s2.SHORT_UUID = 'F5921FEC8DBFAB62B9E3'
) [42121-212]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.setColumns(Table.java:492)
	at org.h2.table.DerivedTable.<init>(DerivedTable.java:47)
	at org.h2.command.query.Query.toTable(Query.java:1004)
	at org.h2.command.Parser.readDerivedTableWithCorrelation(Parser.java:1936)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1816)
	at org.h2.command.Parser.readTableReference(Parser.java:2359)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2810)
	at org.h2.command.Parser.parseSelect(Parser.java:2917)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2800)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2667)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2646)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2639)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2632)
	at org.h2.command.Parser.parseQuery(Parser.java:2593)
	at org.h2.command.Parser.parsePrepared(Parser.java:724)
	at org.h2.command.Parser.parse(Parser.java:691)
	at org.h2.command.Parser.parse(Parser.java:661)
	at org.h2.command.Parser.prepareCommand(Parser.java:568)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1339)
	at org.h2.server.web.WebApp.query(WebApp.java:1137)
	at org.h2.server.web.WebApp.query(WebApp.java:1113)
	at org.h2.server.web.WebApp.process(WebApp.java:244)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:176)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:129)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:166)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-06-19 11:50:11 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Duplicate column name "F"; SQL statement:
SELECT * FROM (
(SELECT h1.UUID, h1.amount, h1.date, h2.f, h2.f FROM

(SELECT * FROM TRANSACTION  WHERE   SHORT_UUID = 'F5921FEC8DBFAB62B9E3') as h1 LEFT JOIN

(SELECT s1.SHORT_UUID AS F , s1.UUID AS Fuuid , s2.SHORT_UUID AS T,  s2.UUID AS Tuuid, t1.amount, t1.date  FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.UUID )
as h2 ON h1.UUID = h2.Fuuid OR h1.UUID = h2.Tuuid  WHERE h2.amount IS NULL  )

UNION ALL

(SELECT t1.UUID,  t1.amount ,  t1.date, s1.SHORT_UUID AS F  , s2.SHORT_UUID AS T  FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.UUID
 WHERE  s1.SHORT_UUID = 'F5921FEC8DBFAB62B9E3' or s2.SHORT_UUID = 'F5921FEC8DBFAB62B9E3'
)
) AS a order by date ASC [42121-212]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.setColumns(Table.java:492)
	at org.h2.table.DerivedTable.<init>(DerivedTable.java:47)
	at org.h2.command.query.Query.toTable(Query.java:1004)
	at org.h2.command.Parser.readDerivedTableWithCorrelation(Parser.java:1936)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1816)
	at org.h2.command.Parser.readTableReference(Parser.java:2359)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2810)
	at org.h2.command.Parser.parseSelect(Parser.java:2917)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2800)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2667)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2646)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2639)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2632)
	at org.h2.command.Parser.parseQuery(Parser.java:2593)
	at org.h2.command.Parser.parsePrepared(Parser.java:724)
	at org.h2.command.Parser.parse(Parser.java:691)
	at org.h2.command.Parser.parse(Parser.java:661)
	at org.h2.command.Parser.prepareCommand(Parser.java:568)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1339)
	at org.h2.server.web.WebApp.query(WebApp.java:1137)
	at org.h2.server.web.WebApp.query(WebApp.java:1113)
	at org.h2.server.web.WebApp.process(WebApp.java:244)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:176)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:129)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:166)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-06-19 11:52:37 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT * FROM (\000d\000a(SELECT h1.UUID, h1.amount, h1.date, h2.f ad [*]Sender, h2.t as Recipiant FROM\000d\000a\000d\000a(SELECT * FROM TRANSACTION  WHERE   SHORT_UUID = 'F5921FEC8DBFAB62B9E3') as h1 LEFT JOIN\000d\000a\000d\000a(SELECT s1.SHORT_UUID AS F , s1.UUID AS Fuuid , s2.SHORT_UUID AS T,  s2.UUID AS Tuuid, t1.amount, t1.date  FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.UUID )\000d\000aas h2 ON h1.UUID = h2.Fuuid OR h1.UUID = h2.Tuuid  WHERE h2.amount IS NULL  )\000d\000a\000d\000aUNION ALL\000d\000a\000d\000a(SELECT t1.UUID,  t1.amount ,  t1.date, s1.SHORT_UUID AS F  , s2.SHORT_UUID AS T  FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.UUID\000d\000a WHERE  s1.SHORT_UUID = 'F5921FEC8DBFAB62B9E3' or s2.SHORT_UUID = 'F5921FEC8DBFAB62B9E3'\000d\000a)\000d\000a) AS a order by date ASC"; expected ",, FROM, WHERE, GROUP, HAVING, WINDOW, QUALIFY, INTERSECT, UNION, EXCEPT, MINUS, ORDER, OFFSET, FETCH, LIMIT, FOR, )"; SQL statement:
SELECT * FROM (
(SELECT h1.UUID, h1.amount, h1.date, h2.f ad Sender, h2.t as Recipiant FROM

(SELECT * FROM TRANSACTION  WHERE   SHORT_UUID = 'F5921FEC8DBFAB62B9E3') as h1 LEFT JOIN

(SELECT s1.SHORT_UUID AS F , s1.UUID AS Fuuid , s2.SHORT_UUID AS T,  s2.UUID AS Tuuid, t1.amount, t1.date  FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.UUID )
as h2 ON h1.UUID = h2.Fuuid OR h1.UUID = h2.Tuuid  WHERE h2.amount IS NULL  )

UNION ALL

(SELECT t1.UUID,  t1.amount ,  t1.date, s1.SHORT_UUID AS F  , s2.SHORT_UUID AS T  FROM TRANSFER as t1 JOIN TRANSACTION as s1 ON t1.FROM_ID = s1.UUID JOIN TRANSACTION AS s2 on t1.TO_ID  = s2.UUID
 WHERE  s1.SHORT_UUID = 'F5921FEC8DBFAB62B9E3' or s2.SHORT_UUID = 'F5921FEC8DBFAB62B9E3'
)
) AS a order by date ASC [42001-212]
